#运行用户
user  nobody nobody;
#启动进程，通常跟CPU数量相等
worker_processes  8;
worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000; 

#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]
error_log  logs/error.log error;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


#一个nginx进程打开最多文件描述符数目，理论值应该是最多打开文件数（系统的值ulimit -n）与nginx进程数相除，但nginx分配请求并不均匀，建议与ulimit -n的值保持一致。
worker_rlimit_nofile 51200;
#工作模式 连接上限
events {
	use epoll;
	#maxclient = worker_processes * worker_connections / cpu_number
	worker_connections  51200;
}

#设定http服务
http {
    include       mime.types;
    include       proxy_cache.conf;
    include       blockips.conf
    default_type  application/octet-stream;
    server_tokens  off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] $request '
    #                  '"$status" $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile指定是否调用 sendfile 函数（zero copy 方式）来输出文件，
    #对于普通应用，必须设为 on,
    #若进行下载等应用磁盘IO重负载应用,可设为off,以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;

    #charset utf-8; #默认编码
    server_names_hash_bucket_size 128; #服务器名字的hash表大小
    client_header_buffer_size 32k; #上传文件大小限制
    large_client_header_buffers 4 64k; #设定请求缓
    client_max_body_size 8m; #设定请求缓

    #autoindex on; #开启目录列表访问，合适下载服务器，默认关闭。
    tcp_nopush on; #防止网络阻塞
    tcp_nodelay on; #防止网络阻塞
    #keepalive_timeout  0;
    keepalive_timeout  60;#长连接超时时间，单位是秒
   
    open_file_cache max=204800 inactive=20s; 
    open_file_cache_min_uses 1; 
    open_file_cache_valid 30s; 
   
    #gzip模块设置
    gzip  on;  #开启gzip压缩输出
    gzip_http_version 1.0;#压缩版本
    gzip_comp_level 2; #压缩等级
    gzip_proxied any;
    gzip_types      text/css application/x-javascript application/xml application/xml+rss text/javascript;
    gzip_min_length 1k;#最小压缩文件大小
    #gzip_buffers 4 16k;#压缩缓冲区
    gzip_vary on;
    gzip_disable     "MSIE [1-6]\.";

    #limit_zone crawler $binary_remote_addr 10m; #开启限制IP连接数的时候需要使用

    upstream tomcat {
        #ip_hash;
        #server 10.1.1.17:80;
        #server 10.1.1.18:80;
        
        server 10.1.1.6:8081 srun_id=t6 weight=1;
    	server 10.1.1.8:8081 srun_id=t8 weight=1;
        jvm_route $cookie_JSESSIONID reverse;
    }

    upstream tomcat_office {
        #ip_hash;       
        server 10.1.1.6:8081 srun_id=t6 weight=1;
        server 10.1.1.8:8081 srun_id=t8 weight=1;
        jvm_route $cookie_JSESSIONID reverse;
    }
    
    server {
        listen       80;
        server_name  file.wfjyxxg.com ;
        #expires     20d;
        index index.html index.htm index.php;
        access_log    logs/access_file.wfjyxxg.com.log;
        location / {
                root /mnt/sdb2/data;
        }
    } 

    server {
        listen       80;
        server_name im.wfjyxxg.com;
        #server_name  *.wfjyxxg.com;
        #expires     30d;
        index index.html index.htm index.php redirect.htm ;
        access_log    logs/access.log;
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }

        # 定义错误提示页面
        error_page   500 502 503 504 /50x.html;  
        location = /50x.html {
            root   /root;
        }
       
        location / {
                proxy_pass http://tomcat;
                include proxy_head.conf;
        }

        location /office {
                proxy_pass http://tomcat_office;
                proxy_redirect off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                #proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                #the large size of media;
                client_max_body_size 150M;
                client_body_buffer_size 256k;
                proxy_connect_timeout 6000;
                proxy_send_timeout 3000;
                proxy_read_timeout 3000;
                proxy_buffer_size 4k;
                proxy_buffers 4 32k;
                proxy_busy_buffers_size 64k;
                proxy_temp_file_write_size 64k;
       
        }

        #静态文件
        location ~* ^.+\.(jpg|jpeg|gif|png|swf|rar|zip|css|js)$ {
            root /opt/vhosts/eis/ROOT;
            expires 10d;
        }


        #防盗链
        location /res/ {
            valid_referers none blocked server_names *.xxxx.com *.yyyy.com;
      
            if ($invalid_referer) {
                return 403; //或者返回一张防盗链的图片rewrite ^/ http://xxx.com/xx/error.gif redirect;
            }
   
            if ($document_uri ~ "\.jpg$"){
                expires 7d;
                break;
            }
        ｝

        location /status {
                    stub_status             on;
                    access_log              off;
                    allow all;
                    #allow   192.168.0.0/16;
                    deny    all;
        }
    }

    

 
}
