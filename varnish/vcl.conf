#/usr/local/varnish/vcl.conf
# 反向代理 请求后端 20.230 de tomcat 服务器
backend myblogserver { 
       set backend.host = "192.168.20.230"; 
       set backend.port = "8081"; 
}

backend server1{
  .host = "192.168.20.10";
  .probe = {
    .url = "/";
    .interval = 5s; #检查间隔时间
    .timeout = 1s; # 等待多长时间
    .window = 5; #将维持5个sliding windows
    .threshold = 3; #至少3次windows 检查是成功
  }
  .max_connections=1000；
  
}

backend server2{
  .host = "192.168.20.11";
  .probe = {
    .url = "/";
    .interval = 5s;
    .timeout = 1s;
    .window = 5;
    .threshold = 3;
  }
}

director example_director round-robin{
  {
    .backend = server1;
  }
  {
    .backend = server2;
  }
}

#允许localhost、127.0.0.1、192.168.0.***
#三个来源IP通过PURGE方法清除缓存；
acl purge {
       "localhost";
       "127.0.0.1";
       "192.168.1.0"/24;
}

sub vcl_recv {
       if (req.request == "PURGE") {
               if (!client.ip ~ purge) {
                       error 405 "Not allowed.";
               }
               lookup;
       }
	   
       #对域名为blog.zyan.cc的请求进行处理，
       #非blog.zyan.cc域名的请求则返回“Zhang Yan Cache Server”；
       if (req.http.host ~ "^blog.zyan.cc") {
               set req.backend = myblogserver; 
			   #对HTTP协议中的GET、HEAD请求进行缓存
			   #对POST请求透过，让其直接访问后端Web服务器
			   #因POST请求是发送数据给服务器的，需要服务器接收、处理，所以不缓存
               if (req.request != "GET" && req.request != "HEAD") {
                       pipe;
               }
               else {
                       lookup;
               }
       }
       else {
               error 404 "Zhang Yan Cache Server"; 
               lookup;
       }
}

sub vcl_hit {
       if (req.request == "PURGE") {
               set obj.ttl = 0s;
               error 200 "Purged.";
       }
}

sub vcl_miss {
       if (req.request == "PURGE") {
               error 404 "Not in cache.";
       }
}

#对以.txt和.js结尾的URL缓存时间设置1小时，对其他的URL缓存时间设置为30天
sub vcl_fetch {
       if (req.request == "GET" && req.url ~ "\.(txt|js)$") {
               set obj.ttl = 3600s;
       }
       else {
               set obj.ttl = 30d;
       }
}